import{throttle as d}from"./utils/index.js";import{clone as o,createStore as c}from"./utils/store/index.js";const h=t=>t.on("@@update",console.log),n={light:{exposure:0,contrast:0,highlights:0,shadows:0,whites:0,blacks:0},color:{temp:0,tint:0,vibrance:0,saturation:0},detail:{sharpen:{amount:0,radius:3},blur:{radius:0,pass:1}},effects:{edgeDetection:{threshold:.3,radius:1,blend:0},dither:{threshold:0,size:1},pixelate:1}};export const initialState={history:{stack:[o(n)],cursor:0,canUndo:!1,canRedo:!1,maxEntries:20},editParams:n};export default c({initialState,actions:{saveSnapshot:d(t=>{t.commit("saveSnapshot",o(t.state.editParams)),t.commit("historyState")}),setEditParam(t,{name:s,value:a}){t.commit("setEditParam",{name:s,value:a})},resetEditParams(t){t.commit("setEditParams",o(initialState.editParams))},undo(t){const s=t.state.history;s.canUndo&&(t.commit("undo"),t.commit("historyState"))},redo(t){const s=t.state.history;s.canRedo&&(t.commit("redo"),t.commit("historyState"))}},mutations:{setEditParams(t,s){t.editParams=s},setEditParam(t,{name:s,value:a}){let i=o(t.editParams);t.editParams=i;const r=s.split(".");for(let e=0;e<r.length-1;e++)i=i[r[e]];i[r[r.length-1]]=a},historyState(t){t.history.canUndo=t.history.cursor<t.history.stack.length-1,t.history.canRedo=t.history.cursor>0},undo(t){t.history.cursor++,t.editParams=o(t.history.stack[t.history.cursor])},redo(t){t.history.cursor--,t.editParams=o(t.history.stack[t.history.cursor])},saveSnapshot(t,s){t.history.stack.splice(0,t.history.cursor),t.history.cursor=0,t.history.stack.unshift(s)}},events:{editParamsChanged:["setEditParam","setEditParams","undo","redo"],updateui:["saveSnapshot","redo","undo"]},plugins:[h]});
