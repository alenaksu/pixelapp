import a from"../../Filter.js";import{createFramebuffer as u}from"../../../utils/index.js";import s from"./shader.js";export default class l extends a{constructor(...e){super(...e);this.name="palette",this.paletteTexture=null,this.parameters={paletteSize:0}}static get fragmentShader(){return s}setPalette(e){if(e){const t=this.gl,r=u(t,256,1);t.bindFramebuffer(t.FRAMEBUFFER,r.buffer),t.bindTexture(t.TEXTURE_2D,r.texture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e),t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteFramebuffer(r.buffer),this.parameters.paletteSize=e.width,this.paletteTexture=r.texture}else this.parameters.paletteSize=0,this.paletteTexture=null}use(){const{gl:e,paletteTexture:t,program:r}=this;if(!t)return;super.use(),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,t),e.activeTexture(e.TEXTURE0);const i=e.getUniformLocation(r,"palette");e.uniform1i(i,2)}clear(){const{gl:e}=this;e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,null),e.activeTexture(e.TEXTURE0)}}
